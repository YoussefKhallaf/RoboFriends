{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","username","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overFlow","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAACC,GACb,IAAOC,EAAmBD,EAAnBC,KAAUC,GAASF,EAAbG,GAAaH,EAATE,OACjB,OACC,sBAAKE,UAAY,sDAAjB,UACC,qBAAKC,IAAK,SAASC,IAAG,+BAA2BN,EAAMG,GAAjC,cACtB,gCACC,6BAAKF,IACL,4BAAIC,WCeOK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEnB,OACC,8BAEKA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OAAQ,cAAC,EAAD,CAEXR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBW,SAAUJ,EAAOG,GAAGC,SACpBV,MAAOM,EAAOG,GAAGT,OAJZS,SCKME,EAfG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,qBAAKV,UAAU,MAAf,SAEA,uBACCA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCAAI,EAPA,SAAClB,GAChB,OACC,qBAAKmB,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACEtB,EAAMuB,YCsCMC,G,wDArCb,aAAe,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GAAW,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAZrE,EAAKC,MAAQ,CACfvB,OAAQ,GACRoB,YAAa,IAJC,E,qDAQb,WAAoB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAa,OAAOA,EAASC,UAC/BF,MAAK,SAAAG,GAAU,EAAKT,SAAS,CAACnB,OAAQ4B,S,oBAK3C,WACC,MAAgCC,KAAKN,MAA7BvB,EAAR,EAAQA,OAAQoB,EAAhB,EAAgBA,YACVU,EAAiB9B,EAAO+B,QAAO,SAAAC,GACrC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASd,EAAYa,kBAErD,OAAQjC,EAAOmC,OAGb,sBAAKvC,UAAU,KAAf,UACA,6CACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQ8B,SANhB,6C,GAvBUM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACL,cAAC,EAAD,IACDC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.43a3ee77.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\tconst {name, id, email} = props;\n\treturn (\n\t\t<div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt= 'robots' src ={`https://robohash.org/${props.id}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t)\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\n\nconst CardList = ({ robots }) => {\n\t\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t    robots.map((user, i) => {\n\t\t\t    return (<Card \n\t\t\t\tkey={i} \n\t\t\t\tid={robots[i].id} \n\t\t\t\tname={robots[i].name} \n\t\t\t\tusername={robots[i].username} \n\t\t\t\temail={robots[i].email} />)\n\t})\n\t\t\t}\n\t\t</div>\n\t\t);\n}\n\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n\treturn (\n\t\t<div className=\"pa2\">\n\n\t\t<input \n\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\n\t\t\ttype='search'\n\t\t\tplaceholder='search robots'\n\t\t\tonChange = {searchChange}\n\t\t\t />\n\n\t\t</div>\n\t)\n}\n\nexport default SearchBox;","import React from 'react';\n\n\nconst Scroll = (props) => {\nreturn (\t\n\t<div style={{overFlow: 'scroll', border: '1px solid black', height: '500px'}}> \n\t\t{props.children}\n\t</div>)\n};\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from'../components/Scroll';\nimport './App.css';\n\nclass App extends Component{\n \tconstructor() {\n \t  super()\n \t  this.state = {\n\t\trobots: [],\n\t\tsearchfield: ''\n   \t\t\t }\n \t\t}\n\n \t\tcomponentDidMount(){\n \t\t\tfetch('https://jsonplaceholder.typicode.com/users')\n \t\t\t.then(response => {return response.json()})\n \t\t    .then(users => {this.setState({robots: users})})\n \t\t\t}\n\n \t\tonSearchChange = (event) => {this.setState({searchfield: event.target.value})}\n\n \t\trender(){\n \t\t\tconst { robots, searchfield } = this.state;\n \t\t\tconst filteredRobots = robots.filter(robot => {\n \t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\n \t\t})\n \t\t\treturn !robots.length?\n \t  \t\t  <h1>Loading</h1> :\n \t\t\t\t(\n \t\t\t\t\t<div className='tc'>\n \t\t\t\t\t<h1>RoboFriends</h1>\n \t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\n \t\t\t\t\t<Scroll>\n \t\t\t\t\t<CardList robots={filteredRobots} />\n \t\t\t\t\t</Scroll>\n \t\t\t\t\t</div>\n \t\t\t\t\t);\n \t\t\t}\n \t\t\t}\n \t\t\t\n \t\t\t\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/./App';\nimport reportWebVitals from './reportWebVitals';\nimport Tachyons from '../node_modules/tachyons';\n;\n\n\nReactDOM.render(\n    <App/>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}